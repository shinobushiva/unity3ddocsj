<!-- #BeginTemplate "/Templates/manual-page.dwt" --><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta charset="utf-8">
	<!-- #TemplateBeginEditable name="doctitle" -->
		<title>Unity - Particle Systems</title>
	<!-- #TemplateEndEditable -->
</head>
<link rel="StyleSheet"  href="../Images/docs.css" type="text/css" />
<body onLoad="DocLoaded();">
<table class="titlebar" cellpadding=0 cellspacing=0 border=0><tr>
	<td class="titleleft"><img src="../images/top/left.png"></td>
	<td><a href="../../Documentation.html"><img src="../images/top/logo.png"></a></td>
	<td class="titlemid">
		<table><tr>
			<td class="doctitle">Particle Systems</td>
			<td><table align="right"><tr>
			<!-- #TemplateBeginEditable name="sections-nav" -->
			<td class="Manual"><a href="../Manual/index.html" title="Go to Unity manual" class="scripting-anchor"><img src="../images/spacer.gif" class="manual" border="0"><span class="manual-text">Manual</span></a><span class="docs-navigation">&nbsp;&nbsp;&nbsp;&nbsp;</span></td>
			<td class="Manual"><a href="../Components/index.html" title="Go to Reference" class="scripting-anchor"><img src="../images/spacer.gif" class="reference" border="0"><span class="components-text">Reference</span></a><span class="docs-navigation">&nbsp;&nbsp;&nbsp;&nbsp;</span></td>
			<td class="Manual"><a href="../ScriptReference/index.html" title="Go to Scripting Reference" class="scripting-anchor"><img src="../images/spacer.gif" class="scripting" border="0"><span class="scripting-text">Scripting &nbsp;&nbsp;</span></a></td>
			<!-- #TemplateEndEditable -->	
			</tr></table></td>
		</tr><tr>
			<td colspan="4">
				<table width="100%" class="docpath"><tr><td >
		<!-- #TemplateBeginEditable name="path" -->
					<a href="../Manual/index.html">Unity Manual</a> &gt; <a href="../Manual/User Guide.html">User Guide</a> &gt; <a href="../Manual/Building Scenes.html">Building Scenes</a> &gt; <a href="../Manual/Particle Systems.html">Particle Systems</a>
		<!-- #TemplateEndEditable -->	
				</td>
				</td><td class="switchlink">
					<!-- #TemplateBeginEditable name="switchLink" -->
					<!--BeginSwitchLink--><!--EndSwitchLink-->
					<!-- #TemplateEndEditable -->	
				</td></tr></table>
			</td>
		</tr></table>
	</td>
	<td class="titleright" width="9"><img src="../images/top/right.png"></td>
</tr></table>
<div class="manual">
	<div class="main">

<!-- #TemplateBeginEditable name="unofficial translation" -->
<p><center><table border="1" ><tr><td  bgcolor="yellow"><center>このドキュメントは有志により翻訳されたもので、オフィシャルではありません。オリジナルのページは<a href="http://unity3d.com/support/documentation/" target="_blank">こちら</a>。<br>This document is unofficially translated by users.Please see the original document <a href="http://unity3d.com/support/documentation/" target="_blank">here</a>.<br><br>翻訳に関する修正など、ご連絡は<a href="mailto:stagesp1@gmail.com">こちら</a>まで。<br>Please send e-mail to <a href="mailto:stagesp1@gmail.com">here</a>, when you have any question about the translation.</center></td>
<td><a href="toedit_proxy.php?url=Particle Systems.html"><img src="../Images/pencil.png"/></a><br/>編集</td>
</tr></table></center></p>
<!-- #TemplateEndEditable -->
		<!-- #TemplateBeginEditable name="navigation" -->
		<div class="nav">
		<div class="nav-prev">
			<a href='../Manual/Cameras.html'>
				<div class="nav-left"></div>
				<div class="nav-main">Previous</div>
				<div class="nav-right"></div>
			</a>
		</div>
	
		<div class="nav-next">
			<a href='../Manual/Terrains.html'>
				<div class="nav-left"></div>
				<div class="nav-main">Next</div>
				<div class="nav-right"></div>
			</a>
		</div>
	</div>
		<!-- #TemplateEndEditable -->	
		<!-- #TemplateBeginEditable name="title" -->
			<h1>Particle Systems</h1>
		<!-- #TemplateEndEditable -->	
		<!-- #TemplateBeginEditable name="body" -->
			
<p><span class='doc-keyword'>Particles</span> are essentially 2D images rendered in 3D space.  They are primarily used for effects such as smoke, fire, water droplets, or leaves.  A <span class='doc-prop'>Particle System</span> is made up of three separate Components: <span class='doc-prop'>Particle Emitter</span>, <span class='doc-prop'>Particle Animator</span>, and a <span class='doc-prop'>Particle Renderer</span>.  You can use a Particle Emitter and Renderer together if you want static particles.  The Particle Animator will move particles in different directions and change colors.  You also have access to each individual particle in a particle system via scripting, so you can create your own unique behaviors that way if you choose.
</p>
<p class='vspace'>Please view the Particle Scripting Reference <a class='urllink' href='../ScriptReference/ParticleEmitter.html' rel='nofollow'>here</a>.
</p>
<p class='vspace'>The remainder of this page's text is from the <a href="../Components/comp-ParticlesGroup.html">Particle Component Reference</a> pages.
</p>
<div class='vspace'></div><h1>Particle Components</h1>
<div class='vspace'></div><h2>Particle Systems</h2>
<p><span class='doc-keyword'>Particle Systems</span> in Unity are used to make clouds of smoke, steam, fire and other atmospheric effects. Particle Systems work by using one or two <span class='doc-keyword'>Textures</span> &amp; drawing them many times, creating a chaotic effect.
</p>
<div class='vspace'></div><div><img class='figure' src='../Images/manual/Particle Systems-0.jpg' /><br /><em>A Particle System included in the Standard Assets</em></div>
<p class='vspace'>A typical Particle System in Unity is an object that contains a <span class='doc-keyword'>Particle Emitter</span>, a <span class='doc-keyword'>Particle Animator</span> and a <span class='doc-keyword'>Particle Renderer</span>. The <a href="../Components/class-EllipsoidParticleEmitter.html">Particle Emitter</a> generates the particles, the <a href="../Components/class-ParticleAnimator.html">Particle Animator</a> moves them over time, and the <a href="../Components/class-ParticleRenderer.html">Particle Renderer</a> draws them on the screen.
</p>
<p class='vspace'>If you want your particles to interact with the world, add a <a href="../Components/class-WorldParticleCollider.html">Particle Collider</a> <span class='doc-keyword'>Component</span> to the <span class='doc-keyword'>GameObject</span>.
</p><h1>Ellipsoid Particle Emitter</h1>
<p>The <span class='doc-keyword'>Ellipsoid Particle Emitter</span> spawns particles inside a sphere. Use the <span class='doc-prop'>Ellipsoid</span> property below to scale &amp; stretch the sphere.
</p>
<div class='vspace'></div><div><img class='figure' src='../Images/manual/Particle Systems-1.jpg' /><br /><em>The Ellipsoid Particle Emitter <span class='doc-keyword'>Inspector</span></em></div>
<div class='vspace'></div><h2>Properties</h2>
<table width='100%'><tr class='tableheader'><td  class='prop'></td><td class='function'></td></tr>
<tr ><td  align='left'><span class='doc-prop'>Emit</span></td><td  align='left'>If enabled, the emitter will emit particles.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Min Size</span></td><td  align='left'>The minimum size each particle can be at the time when it is spawned.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Max Size</span></td><td  align='left'>The maximum size each particle can be at the time when it is spawned.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Min Energy</span></td><td  align='left'>The minimum lifetime of each particle, measured in seconds.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Max Energy</span></td><td  align='left'>The maximum lifetime of each particle, measured in seconds.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Min Emission</span></td><td  align='left'>The minimum number of particles that will be spawned every second.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Max Emission</span></td><td  align='left'>The maximum number of particles that will be spawned every second.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>World Velocity</span></td><td  align='left'>The starting speed of particles in world space, along X, Y, and Z.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Local Velocity</span></td><td  align='left'>The starting speed of particles along X, Y, and Z, measured in the object's orientation.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Rnd Velocity</span></td><td  align='left'>A random speed along X, Y, and Z that is added to the velocity.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Emitter Velocity Scale</span></td><td  align='left'>The amount of the emitter's speed that the particles inherit.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Tangent Velocity</span></td><td  align='left'>The starting speed of particles along X, Y, and Z, across the Emitter's surface.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Simulate In World Space</span></td><td  align='left'>If enabled, the particles don't move when the emitter moves. If false, when you move the emitter, the particles follow it around.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>One Shot</span></td><td  align='left'>If enabled, the particle numbers specified by min &amp; max emission is spawned all at once. If disabled, the particles are generated in a long stream.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Ellipsoid</span></td><td  align='left'>Scale of the sphere along X, Y, and Z that the particles are spawned inside.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>MinEmitterRange</span></td><td  align='left'>Determines an empty area in the center of the sphere - use this to make particles appear on the edge of the sphere.</td></tr>
</table>
<div class='vspace'></div><h2>Details</h2>
<p>Ellipsoid Particle Emitters (EPEs) are the basic emitter, and are included when you choose to add a <span class='doc-keyword'>Particle System</span> to your scene from <span class='doc-menu'>Components-&gt;Particles-&gt;Particle System</span>.  You can define the boundaries for the particles to be spawned, and give the particles an initial velocity.  From here, use the <a href="../Components/class-ParticleAnimator.html">Particle Animator</a> to manipulate how your particles will change over time to achieve interesting effects.
</p>
<p class='vspace'>Particle Emitters work in conjunction with <a href="../Components/class-ParticleAnimator.html">Particle Animators</a> and <a href="../Components/class-ParticleRenderer.html">Particle Renderers</a> to create, manipulate, and display Particle Systems. All three Components must be present on an object before the particles will behave correctly.  When particles are being emitted, all different velocities are added together to create the final velocity.
</p>
<div class='vspace'></div><h3>Spawning Properties</h3>
<p>Spawning properties like <span class='doc-prop'>Size</span>, <span class='doc-prop'>Energy</span>, <span class='doc-prop'>Emission</span>, and <span class='doc-prop'>Velocity</span> will give your particle system distinct personality when trying to achieve different effects.  Having a small <span class='doc-prop'>Size</span> could simulate fireflies or stars in the sky.  A large <span class='doc-prop'>Size</span> could simulate dust clouds in a musky old building.
</p>
<p class='vspace'><span class='doc-prop'>Energy</span> and <span class='doc-prop'>Emission</span> will control how long your particles remain onscreen and how many particles can appear at any one time.  For example, a rocket might have high <span class='doc-prop'>Emission</span> to simulate density of smoke, and high <span class='doc-prop'>Energy</span> to simulate the slow dispersion of smoke into the air.
</p>
<p class='vspace'><span class='doc-prop'>Velocity</span> will control how your particles move.  You might want to change your <span class='doc-prop'>Velocity</span> in scripting to achieve interesting effects, or if you want to simulate a constant effect like wind, set your X and Z <span class='doc-prop'>Velocity</span> to make your particles blow away.
</p>
<div class='vspace'></div><h3>Simulate in World Space</h3>
<p>If this is disabled, the position of each individual particle will always translate relative to the <span class='doc-prop'>Position</span> of the emitter.  When the emitter moves, the particles will move along with it.  If you have <span class='doc-prop'>Simulate in World Space</span> enabled, particles will not be affected by the translation of the emitter.  For example, if you have a fireball that is spurting flames that rise, the flames will be spawned and float up in space as the fireball gets further away.  If <span class='doc-prop'>Simulate in World Space</span> is disabled, those same flames will move across the screen along with the fireball.
</p>
<div class='vspace'></div><h3>Emitter Velocity Scale</h3>
<p>This property will only apply if <span class='doc-prop'>Simulate in World Space</span> is enabled.
</p>
<p class='vspace'>If this property is set to 1, the particles will inherit the exact translation of the emitter at the time they are spawned.  If it is set to 2, the particles will inherit double the emitter's translation when they are spawned.  3 is triple the translation, etc.
</p>
<div class='vspace'></div><h3>One Shot</h3>
<p><span class='doc-prop'>One Shot</span> emitters will create all particles within the <span class='doc-prop'>Emission</span> property all at once, and cease to emit particles over time.  Here are some examples of different particle system uses with <span class='doc-prop'>One Shot</span> <span class='doc-prop'>Enabled</span> or <span class='doc-prop'>Disabled</span>:
</p>
<p class='vspace'><span class='doc-prop'>Enabled</span>:
</p><ul><li>Explosion
</li><li>Water splash
</li><li>Magic spell
</li></ul><p class='vspace'><span class='doc-prop'>Disabled</span>:
</p><ul><li>Gun barrel smoke
</li><li>Wind effect
</li><li>Waterfall
</li></ul><div class='vspace'></div><h3>Min Emitter Range</h3>
<p>The <span class='doc-prop'>Min Emitter Range</span> determines the depth within the ellipsoid that particles can be spawned.  Setting it to 0 will allow particles to spawn anywhere from the center core of the ellipsoid to the outer-most range.  Setting it to 1 will restrict spawn locations to the outer-most range of the ellipsoid.
</p>
<div class='vspace'></div><div><img class='figure' src='../Images/manual/Particle Systems-2.jpg' /><br /><em><span class='doc-prop'>Min Emitter Range</span> of 0</em></div>
<div class='vspace'></div><div><img class='figure' src='../Images/manual/Particle Systems-3.jpg' /><br /><em><span class='doc-prop'>Min Emitter Range</span> of 1</em></div>
<div class='vspace'></div><h2>Hints</h2>
<ul><li>Be careful of using many large particles. This can seriously hinder performance on low-level machines. Always try to use the minimum number of particles to attain an effect.
</li><li>The <span class='doc-prop'>Emit</span> property works in conjunction with the <span class='doc-prop'>AutoDestruct</span> property of the Particle Animator.  Through scripting, you can cease the emitter from emitting, and then <span class='doc-prop'>AutoDestruct</span> will automatically destroy the Particle System and the GameObject it is attached to.
</li></ul><h1>Mesh Particle Emitter</h1>
<p>The <span class='doc-keyword'>Mesh Particle Emitter</span> emits particles around a mesh. Particles are spawned from the surface of the mesh, which can be necessary when you want to make your particles interact in a complex way with objects.
</p>
<div class='vspace'></div><div><img class='figure' src='../Images/manual/Particle Systems-4.jpg' /><br /><em>The Mesh Particle Emitter <span class='doc-keyword'>Inspector</span></em></div>
<div class='vspace'></div><h2>Properties</h2>
<table width='100%'><tr class='tableheader'><td  class='prop'></td><td class='function'></td></tr>
<tr ><td  align='left'><span class='doc-prop'>Emit</span></td><td  align='left'>If enabled, the emitter will emit particles.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Min Size</span></td><td  align='left'>The minimum size each particle can be at the time when it is spawned.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Max Size</span></td><td  align='left'>The maximum size each particle can be at the time when it is spawned.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Min Energy</span></td><td  align='left'>The minimum lifetime of each particle, measured in seconds.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Max Energy</span></td><td  align='left'>The maximum lifetime of each particle, measured in seconds.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Min Emission</span></td><td  align='left'>The minimum number of particles that will be spawned every second.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Max Emission</span></td><td  align='left'>The maximum number of particles that will be spawned every second.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>World Velocity</span></td><td  align='left'>The starting speed of particles in world space, along X, Y, and Z.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Local Velocity</span></td><td  align='left'>The starting speed of particles along X, Y, and Z, measured in the object's orientation.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Rnd Velocity</span></td><td  align='left'>A random speed along X, Y, and Z that is added to the velocity.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Emitter Velocity Scale</span></td><td  align='left'>The amount of the emitter's speed that the particles inherit.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Tangent Velocity</span></td><td  align='left'>The starting speed of particles along X, Y, and Z, across the Emitter's surface.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Simulate In World Space</span></td><td  align='left'>If enabled, the particles don't move when the emitter moves. If false, when you move the emitter, the particles follow it around.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>One Shot</span></td><td  align='left'>If enabled, the particle numbers specified by min &amp; max emission is spawned all at once. If disabled, the particles are generated in a long stream.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Interpolate Triangles</span></td><td  align='left'>If enabled, particles are spawned all over the mesh's surface. If disabled, particles are only spawned from the mesh's vertrices.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Systematic</span></td><td  align='left'>If enabled, particles are spawned in the order of the vertices defined in the mesh. Although you seldom have direct control over vertex order in meshes, most 3D modelling applications have a very systematic setup when using primitives. It is important that the mesh contains no faces in order for this to work.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Min Normal Velocity</span></td><td  align='left'>Minimum amount that particles are thrown away from the mesh.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Max Normal Velocity</span></td><td  align='left'>Maximum amount that particles are thrown away from the mesh.</td></tr>
</table>
<div class='vspace'></div><h2>Details</h2>
<p>Mesh Particle Emitters (MPEs) are used when you want more precise control over the spawn position &amp; directions than the simpler <span class='doc-keyword'>Ellipsoid Particle Emitter</span> gives you.  They can be used for making advanced effects.
</p>
<p class='vspace'>MPEs work by emitting particles at the vertices of the attached mesh. Therefore, the areas of your mesh that are more dense with polygons will be more dense with particle emission.
</p>
<p class='vspace'>Particle Emitters work in conjunction with <a href="../Components/class-ParticleAnimator.html">Particle Animators</a> and <a href="../Components/class-ParticleRenderer.html">Particle Renderers</a> to create, manipulate, and display Particle Systems. All three Components must be present on an object before the particles will behave correctly.  When particles are being emitted, all different velocities are added together to create the final velocity.
</p>
<div class='vspace'></div><h3>Spawning Properties</h3>
<p>Spawning properties like <span class='doc-prop'>Size</span>, <span class='doc-prop'>Energy</span>, <span class='doc-prop'>Emission</span>, and <span class='doc-prop'>Velocity</span> will give your particle system distinct personality when trying to achieve different effects.  Having a small <span class='doc-prop'>Size</span> could simulate fireflies or stars in the sky.  A large <span class='doc-prop'>Size</span> could simulate dust clouds in a musky old building.
</p>
<p class='vspace'><span class='doc-prop'>Energy</span> and <span class='doc-prop'>Emission</span> will control how long your particles remain onscreen and how many particles can appear at any one time.  For example, a rocket might have high <span class='doc-prop'>Emission</span> to simulate density of smoke, and high <span class='doc-prop'>Energy</span> to simulate the slow dispersion of smoke into the air.
</p>
<p class='vspace'><span class='doc-prop'>Velocity</span> will control how your particles move.  You might want to change your <span class='doc-prop'>Velocity</span> in scripting to achieve interesting effects, or if you want to simulate a constant effect like wind, set your X and Z <span class='doc-prop'>Velocity</span> to make your particles blow away.
</p>
<div class='vspace'></div><h3>Simulate in World Space</h3>
<p>If this is disabled, the position of each individual particle will always translate relative to the <span class='doc-prop'>Position</span> of the emitter.  When the emitter moves, the particles will move along with it.  If you have <span class='doc-prop'>Simulate in World Space</span> enabled, particles will not be affected by the translation of the emitter.  For example, if you have a fireball that is spurting flames that rise, the flames will be spawned and float up in space as the fireball gets further away.  If <span class='doc-prop'>Simulate in World Space</span> is disabled, those same flames will move across the screen along with the fireball.
</p>
<div class='vspace'></div><h3>Emitter Velocity Scale</h3>
<p>This property will only apply if <span class='doc-prop'>Simulate in World Space</span> is enabled.
</p>
<p class='vspace'>If this property is set to 1, the particles will inherit the exact translation of the emitter at the time they are spawned.  If it is set to 2, the particles will inherit double the emitter's translation when they are spawned.  3 is triple the translation, etc.
</p>
<div class='vspace'></div><h3>One Shot</h3>
<p><span class='doc-prop'>One Shot</span> emitters will create all particles within the <span class='doc-prop'>Emission</span> property all at once, and cease to emit particles over time.  Here are some examples of different particle system uses with <span class='doc-prop'>One Shot</span> <span class='doc-prop'>Enabled</span> or <span class='doc-prop'>Disabled</span>:
</p>
<p class='vspace'><span class='doc-prop'>Enabled</span>:
</p><ul><li>Explosion
</li><li>Water splash
</li><li>Magic spell
</li></ul><p class='vspace'><span class='doc-prop'>Disabled</span>:
</p><ul><li>Gun barrel smoke
</li><li>Wind effect
</li><li>Waterfall
</li></ul><div class='vspace'></div><h2>Interpolate Triangles</h2>
<p>Enabling your emitter to <span class='doc-prop'>Interpolate Triangles</span> will allow particles to be spawned between the mesh's vertices.  This option is off by default, so particles will only be spawned at the vertices.
</p>
<div class='vspace'></div><div><img class='figure' src='../Images/manual/Particle Systems-5.jpg' /><br /><em>A sphere with <span class='doc-prop'>Interpolate Triangles</span> off (the default)</em></div>
<p class='vspace'>Enabling this option will spawn particles on and in-between vertices, essentially all over the mesh's surface (seen below).
</p>
<div class='vspace'></div><div><img class='figure' src='../Images/manual/Particle Systems-6.jpg' /><br /><em>A sphere with <span class='doc-prop'>Interpolate Triangles</span> on</em></div>
<p class='vspace'>It bears repeating that even with <span class='doc-prop'>Interpolate Triangles</span> enabled, particles will still be denser in areas of your mesh that are more dense with polygons.
</p>
<div class='vspace'></div><h2>Systematic</h2>
<p>Enabling <span class='doc-prop'>Systematic</span> will cause your particles to be spawned in your mesh's vertex order.  The vertex order is set by your 3D modeling application.
</p>
<div class='vspace'></div><div><img class='figure' src='../Images/manual/Particle Systems-7.jpg' /><br /><em>An MPE attached to a sphere with <span class='doc-prop'>Systematic</span> enabled</em></div>
<div class='vspace'></div><h2>Normal Velocity</h2>
<p><span class='doc-prop'>Normal Velocity</span> controls the speed at which particles are emitted along the normal from where they are spawned.
</p>
<p class='vspace'>For example, create a Mesh Particle System, use a cube mesh as the emitter, enable <span class='doc-prop'>Interpolate Triangles</span>, and set <span class='doc-prop'>Normal Velocity Min</span> and <span class='doc-prop'>Max</span> to 1. You will now see the particles emit from the faces of the cube in a straight line.
</p>
<div class='vspace'></div><h2>See Also</h2>
<ul><li><a href="../Manual/HOWTO-MeshParticleEmitter.html">How to make a Mesh Particle Emitter</a>
</li></ul><div class='vspace'></div><h2>Hints</h2>
<ul><li>Be careful of using many large particles. This can seriously hinder performance on low-level machines. Always try to use the minimum number of particles to attain an effect.
</li><li>The <span class='doc-prop'>Emit</span> property works in conjunction with the <span class='doc-prop'>AutoDestruct</span> property of the Particle Animator.  Through scripting, you can cease the emitter from emitting, and then <span class='doc-prop'>AutoDestruct</span> will automatically destroy the Particle System and the GameObject it is attached to.
</li><li>MPEs can also be used to make glow from a lot of lamps placed in a scene. Simply make a mesh with one vertex in the center of each lamp, and build an MPE from that with a halo material. Great for evil sci-fi worlds.
</li></ul><h1>Particle Animator</h1>
<p><span class='doc-keyword'>Particle Animators</span> move your particles over time, you use them to apply wind, drag &amp; color cycling to your particle systems.
</p>
<div class='vspace'></div><div><img class='figure' src='../Images/manual/Particle Systems-8.jpg' /><br /><em>The Particle Animator <span class='doc-keyword'>Inspector</span></em></div>
<div class='vspace'></div><h2>Properties</h2>
<table width='100%'><tr class='tableheader'><td  class='prop'></td><td class='function'></td></tr>
<tr ><td  align='left'><span class='doc-prop'>Does Animate Color</span></td><td  align='left'>If enabled, particles cycle their color over their lifetime.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Color Animation</span></td><td  align='left'>The 5 colors particles go through. All particles cycle over this - if some have a shorter life span than others, they will animate faster.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>World Rotation Axis</span></td><td  align='left'>An optional world-space axis the particles rotate around. Use this to make advanced spell effects or give caustic bubbles some life.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Local Rotation Axis</span></td><td  align='left'>An optional local-space axis the particles rotate around. Use this to make advanced spell effects or give caustic bubbles some life.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Size Grow</span></td><td  align='left'>Use this to make particles grow in size over their lifetime. As randomized forces will spread your particles out, it is often nice to make them grow in size so they don't fall apart. Use this to make smoke rise upwards, to simulate wind, etc.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Rnd Force</span></td><td  align='left'>A random force added to particles every frame. Use this to make smoke become more alive.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Force</span></td><td  align='left'>The force being applied every frame to the particles, measure relative to the world.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Damping</span></td><td  align='left'>How much particles are slowed every frame. A value of 1 gives no damping, while less makes them slow down.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Autodestruct</span></td><td  align='left'>If enabled, the GameObject attached to the Particle Animator will be destroyed when all particles disappear.</td></tr>
</table>
<div class='vspace'></div><h2>Details</h2>
<p>Particle Animators allow your particle systems to be dynamic.  They allow you to change the color of your particles, apply forces and rotation, and choose to destroy them when they are finished emitting.  For more information about Particle Systems, reference <a href="../Components/class-MeshParticleEmitter.html">Mesh Particle Emitters</a>, <a href="../Components/class-EllipsoidParticleEmitter.html">Ellipsoid Particle Emitters</a>, and <a href="../Components/class-ParticleRenderer.html">Particle Renderers</a>.
</p>
<div class='vspace'></div><h3>Animating Color</h3>
<p>If you would like your particles to change colors or fade in/out, enable them to <span class='doc-prop'>Animate Color</span> and specify the colors for the cycle.  Any particle system that animates color will cycle through the 5 colors you choose.  The speed at which they cycle will be determined by the Emitter's <span class='doc-prop'>Energy</span> value.
</p>
<p class='vspace'>If you want your particles to fade in rather than instantly appear, set your first or last color to have a low Alpha value.
</p>
<div class='vspace'></div><div><img class='figure' src='../Images/manual/Particle Systems-9.jpg' /><br /><em>An <span class='doc-prop'>Animating Color</span> Particle System</em></div>
<div class='vspace'></div><h3>Rotation Axes</h3>
<p>Setting values in either the Local or World <span class='doc-prop'>Rotation Axes</span> will cause all spawned particles to rotate around the indicated axis (with the <span class='doc-keyword'>Transform's</span> position as the center).  The greater the value is entered on one of these axes, the faster the rotation will be.
</p>
<p class='vspace'>Setting values in the Local Axes will cause the rotating particles to adjust their rotation as the Transform's rotation changes, to match its local axes.
</p>
<p class='vspace'>Setting values in the World Axes will cause the particles' rotation to be consistent, regardless of the Transform's rotation.
</p>
<div class='vspace'></div><h3>Forces &amp; Damping</h3>
<p>You use force to make particles accelerate in the direction specified by the force.
</p>
<p class='vspace'><span class='doc-prop'>Damping</span> can be used to decelerate or accelerate without changing their direction:
</p><ul><li>A value of 1 means no <span class='doc-prop'>Damping</span> is applied, the particles will not slow down or accelerate.
</li><li>A value of 0 means particles will stop immediately.
</li><li>A value of 2 means particles will double their speed every second.
</li></ul><div class='vspace'></div><h3>Destroying GameObjects attached to Particles</h3>
<p>You can destroy the Particle System and any attached <span class='doc-keyword'>GameObject</span> by enabling the <span class='doc-prop'>AutoDestruct</span> property.  For example, if you have an oil drum, you can attach a Particle System that has <span class='doc-prop'>Emit</span> disabled and <span class='doc-prop'>AutoDestruct</span> enabled.  On collision, you enable the Particle Emitter.  The explosion will occur and after it is over, the Particle System and the oil drum will be destroyed and removed from the scene.
</p>
<p class='vspace'>Note that automatic destruction takes effect only after some particles have been emitted. The precise rules for when the object is destroyed when <span class='doc-prop'>AutoDestruct</span> is on:
</p><ul><li>If there have been some particles emitted already, but all of them are dead now, <em>or</em>
</li><li>If the <a href="../Components/class-EllipsoidParticleEmitter.html">emitter</a> did have <span class='doc-prop'>Emit</span> on at some point, but now <span class='doc-prop'>Emit</span> is off.
</li></ul><div class='vspace'></div><h2>Hints</h2>
<ul><li>Use the <span class='doc-prop'>Color Animation</span> to make your particles fade in &amp; out over their lifetime - otherwise, you will get nasty-looking pops.
</li><li>Use the <span class='doc-prop'>Rotation Axes</span> to make whirlpool-like swirly motions.
</li></ul><h1>Particle Collider</h1>
<p>The <span class='doc-keyword'>World Particle Collider</span> is used to collide particles against other <span class='doc-keyword'>Colliders</span> in the scene.
</p>
<div class='vspace'></div><div><img class='figure' src='../Images/manual/Particle Systems-10.jpg' /><br /><em>A <span class='doc-keyword'>Particle System</span> colliding with a <span class='doc-keyword'>Mesh Collider</span></em></div>
<div class='vspace'></div><h2>Properties</h2>
<table width='100%'><tr class='tableheader'><td  class='prop'></td><td class='function'></td></tr>
<tr ><td  align='left'><span class='doc-prop'>Bounce Factor</span></td><td  align='left'>Particles can be accelerated or slowed down when they collide against other objects. This factor is similar to the <span class='doc-keyword'>Particle Animator's</span> <span class='doc-prop'>Damping</span> property.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Collision Energy Loss</span></td><td  align='left'>Amount of energy (in seconds) a particle should lose when colliding. If the energy goes below 0, the particle is killed.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Min Kill Velocity</span></td><td  align='left'>If a particle's <span class='doc-prop'>Velocity</span> drops below <span class='doc-prop'>Min Kill Velocity</span> because of a collision, it will be eliminated.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Collides with</span></td><td  align='left'>Which <a href="../Components/Layers.html">Layers</a> the particle will collide against.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Send Collision Message</span></td><td  align='left'>If enabled, every particle sends out a collision message that you can catch through scripting.</td></tr>
</table>
<div class='vspace'></div><h2>Details</h2>
<p>To create a Particle System with Particle Collider:
</p><ol><li>Create a Particle System using <span class='doc-menu'>GameObject-&gt;Create Other-&gt;Particle System</span>
</li><li>Add the Particle Collider using <span class='doc-menu'>Component-&gt;Particles-&gt;World Particle Collider</span>
</li></ol><div class='vspace'></div><h3>Messaging</h3>
<p>If <span class='doc-prop'>Send Collision Message</span> is enabled, any particles that are in a collision will send the message <span class='doc-prop'>OnParticleCollision()</span> to  both the particle's <span class='doc-keyword'>GameObject</span> and the GameObject the particle collided with.
</p>
<div class='vspace'></div><h2>Hints</h2>
<ul><li><span class='doc-prop'>Send Collision Message</span> can be used to simulate bullets and apply damage on impact.
</li><li>Particle Collision Detection is slow when used with a lot of particles. Use Particle Collision Detection wisely.
</li><li>Message sending introduces a large overhead and shouldn't be used for normal Particle Systems.
</li></ul><h1>Particle Renderer</h1>
<p>The <span class='doc-keyword'>Particle Renderer</span> renders the <span class='doc-keyword'>Particle System</span> on screen.
</p>
<div class='vspace'></div><div><img class='figure' src='../Images/manual/Particle Systems-11.jpg' /><br /><em>The Particle Renderer <span class='doc-keyword'>Inspector</span></em></div>
<div class='vspace'></div><h2>Properties</h2>
<table width='100%'><tr class='tableheader'><td  class='prop'></td><td class='function'></td></tr>
<tr ><td  align='left'><span class='doc-prop'>Materials</span></td><td  align='left'>Reference to a list of <span class='doc-keyword'>Materials</span> that will be displayed in the position of each individual particle.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Camera Velocity Scale</span></td><td  align='left'>The amount of stretching that is applied to the Particles based on <a href="../Components/class-Camera.html">Camera</a> movement.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Stretch Particles</span></td><td  align='left'>Determines how the particles are rendered.</td></tr>
<tr ><td  align='left'><span  style='padding-left: 1.5em;'><span class='doc-prop'>Billboard</span></span></td><td  align='left'>The particles are rendered as if facing the camera.</td></tr>
<tr ><td  align='left'><span  style='padding-left: 1.5em;'><span class='doc-prop'>Stretched</span></span></td><td  align='left'>The particles are facing the direction they are moving.</td></tr>
<tr ><td  align='left'><span  style='padding-left: 1.5em;'><span class='doc-prop'>SortedBillboard</span></span></td><td  align='left'>The particles are sorted by depth. Use this when using a blending material.</td></tr>
<tr ><td  align='left'><span  style='padding-left: 1.5em;'><span class='doc-prop'>VerticalBillboard</span></span></td><td  align='left'>All particles are aligned flat along the X/Z axes.</td></tr>
<tr ><td  align='left'><span  style='padding-left: 1.5em;'><span class='doc-prop'>HorizontalBillboard</span></span></td><td  align='left'>All particles are aligned flat along the X/Y axes.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Length Scale</span></td><td  align='left'>If <span class='doc-prop'>Stretch Particles</span> is set to <span class='doc-prop'>Stretched</span>, this value determines how long the particles are in their direction of motion.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>Velocity Scale</span></td><td  align='left'>If <span class='doc-prop'>Stretch Particles</span> is set to <span class='doc-prop'>Stretched</span>, this value determines the rate at which particles will be stretched, based on their movement speed.</td></tr>
<tr ><td  align='left'><span class='doc-prop'>UV Animation</span></td><td  align='left'>If either of these are set, the UV coordinates of the particles will be generated for use with a tile animated texture. See the section on <a href='#AnimatedTextures'>Animated Textures</a> below.</td></tr>
<tr ><td  align='left'><span  style='padding-left: 1.5em;'><span class='doc-prop'>X Tile</span></span></td><td  align='left'>Number of frames located across the X axis.</td></tr>
<tr ><td  align='left'><span  style='padding-left: 1.5em;'><span class='doc-prop'>Y Tile</span></span></td><td  align='left'>Number of frames located across the Y axis.</td></tr>
<tr ><td  align='left'><span  style='padding-left: 1.5em;'><span class='doc-prop'>Cycles</span></span></td><td  align='left'>How many times to loop the animation sequence.</td></tr>
</table>
<div class='vspace'></div><h2>Details</h2>
<p>Particle Renderers are required for any Particle Systems to be displayed on the screen.
</p>
<div class='vspace'></div><div><img class='figure' src='../Images/manual/Particle Systems-12.jpg' /><br /><em>A Particle Renderer makes the Gunship's engine exhaust appear on the screen</em></div>
<div class='vspace'></div><h3>Choosing a Material</h3>
<p>When setting up a Particle Renderer it is very important to use an appropriate material and shader that renders both sides of the material. Most of the time you want to use a Material with one of the built-in Particle Shaders. There are some premade materials in the <span class='doc-menu'>Standard Assets-&gt;Particles-&gt;Sources</span> folder that you can use.
</p>
<p class='vspace'>Creating a new material is easy:
</p><ol><li>Select <span class='doc-menu'>Assets-&gt;Create Other-&gt;Material</span> from the menu bar.
</li><li>The <a href="../Components/class-Material.html">Material</a> has a shader popup, choose one of the shaders in the Particles group. Eg. <span class='doc-menu'>Particles-&gt;Multiply</span>.
</li><li>Now assign a Texture. The different shaders use the alpha channel of the textures slightly differently, but most of the time a value of black will make it invisible and white in the alpha channel will display it on screen.
</li></ol><div class='vspace'></div><h3>Distorting particles</h3>
<p>By default particles are rendered billboarded. That is simple square sprites. This is good for smoke and explosions and most other particle effects.
</p>
<p class='vspace'>Particles can be made to either stretch with the velocity. This is useful for sparks, lightning or laser beams. <span class='doc-prop'>Length Scale</span> and <span class='doc-prop'>Velocity Scale</span> affects how long the stretched particle will be.
</p>
<p class='vspace'><span class='doc-prop'>Sorted Billboard</span> can be used to make all particles sort by depth. Sometimes this is necessary, mostly when using <span class='doc-menu'>Alpha Blended</span> particle shaders. This can be expensive and should only be used if it really makes a quality difference when rendering.
</p>
<p class='vspace'><a name='AnimatedTextures' id='AnimatedTextures'></a>
</p>
<div class='vspace'></div><h3>Animated textures</h3>
<p>Particle Systems can be rendered with an animated tile texture. To use this feature, make the texture out of a grid of images. As the particles go through their life cycle, they will cycle through the images. This is good for adding more life to your particles, or making small rotating debris pieces.
</p>
<div class='vspace'></div><h2>Hints</h2>
<ul><li>Use Particle Shaders with the Particle Renderer.
</li></ul>
</p><small>Page last updated: 2007-11-16</p>
    <script type="text/javascript">


    var allHTMLTags = new Array();
    document.divs = new Array();

    function getElementByClass(theClass) {

	    var allHTMLTags=document.getElementsByTagName("*");

	    for (var i=0; i<allHTMLTags.length; i++) {

		    if (allHTMLTags[i].className==theClass) {
			    return true;
		    }
	    }
	    return false;
    }

    function ShowHideDiv(containerName, className, content){
	var container = document.getElementById(containerName);
	if(container == null)
		return;
	if(content == '') {//In case there are no divs in the page we still can change the icons.
		if(containerName == 'desktopRef') {
			if(container.innerHTML == "<img src=\"../Images/DesktopNO.png\" alt=\"\">") {
				container.innerHTML = "<img src=\"../Images/DesktopYES.png\" alt=\"\">";
				SetCookie(containerName, 'set', 30);
			} else {
				container.innerHTML = "<img src=\"../Images/DesktopNO.png\" alt=\"\">";
				UnSetCookie(containerName);
			}
		}
		if(containerName == 'iosRef') {
			if(container.innerHTML == "<img src=\"../Images/iPhoneNO.png\" alt=\"\">") {
				container.innerHTML = "<img src=\"../Images/iPhoneYES.png\" alt=\"\">";
				SetCookie(containerName, 'set', 30);
			} else {
				container.innerHTML = "<img src=\"../Images/iPhoneNO.png\" alt=\"\">";
				UnSetCookie(containerName);
			}
		}
		if(containerName == 'androidRef') {
			if(container.innerHTML == "<img src=\"../Images/AndroidNO.png\" alt=\"\">") {
				container.innerHTML = "<img src=\"../Images/AndroidYES.png\" alt=\"\">";
				SetCookie(containerName, 'set', 30);
			} else {
				container.innerHTML = "<img src=\"../Images/AndroidNO.png\" alt=\"\">";
				UnSetCookie(containerName);
			}	
		}
	} else {
		if(container.innerHTML == "<h1><img src=\"../Images/PlatformArrowRight.png\" alt=\"\"> " + content + "</h1>") {
		container.innerHTML = "<h1><img src=\"../Images/PlatformArrowDown.png\" alt=\"\">" + content + "</h1>";
			SetCookie(containerName, 'set', 30);
		} else {
			container.innerHTML = "<h1><img src=\"../Images/PlatformArrowRight.png\" alt=\"\">" + content + "</h1>";
			UnSetCookie(containerName);
		}
	}
	for(var i = 0; i < document.divs.length; i++) {
		var divClassName = document.divs[i];
		var matched = false;
		if(divClassName.className == className)
			   matched = true;
		if(matched) {
			
			if(divClassName != null) {
				if (divClassName.style.display == 'block') {
					divClassName.style.display = 'none';
					if(content == '') {
						if(className == 'specific-desktop')
							container.innerHTML = "<img src=\"../Images/DesktopNO.png\" alt=\"\" />";
						if(className == 'specific-ios')
							container.innerHTML = "<img src=\"../Images/iPhoneNO.png\" alt=\"\" />";
						if(className == 'specific-android')
							container.innerHTML = "<img src=\"../Images/AndroidNO.png\" alt=\"\" />";
					} else {
						container.innerHTML = "<h1><img src=\"../Images/PlatformArrowRight.png\" alt=\"\" /> " + content + "</h1>";
					}
					UnSetCookie(containerName);
				} else {
					divClassName.style.display = 'block';
					if(content == '') {
						if(className == 'specific-desktop')
							container.innerHTML = "<img src=\"../Images/DesktopYES.png\" alt=\"\" />";
						if(className == 'specific-ios')
							container.innerHTML = "<img src=\"../Images/iPhoneYES.png\" alt=\"\" />";
						if(className == 'specific-android')
							container.innerHTML = "<img src=\"../Images/AndroidYES.png\" alt=\"\" />";
					} else {
						container.innerHTML = "<h1><img src=\"../Images/PlatformArrowDown.png\" alt=\"\" /> " + content + "</h1>";
					}
					SetCookie(containerName, 'set', 30);
				}
			}
		}	
        }			   
    }
    function UnSetCookie(cn) {
    	SetCookie(cn,'',30);
    }

    function GetCookie(cName) {
	if (document.cookie.length > 0) {
            cStart = document.cookie.indexOf(cName + "=");
	    if(cStart != -1) {
	        cStart = cStart + cName.length + 1;
	        cEnd = document.cookie.indexOf(";", cStart);
	        if (cEnd == -1) {
	            cEnd = document.cookie.length;
	        }
	        return unescape(document.cookie.substring(cStart, cEnd));;
	    }
	}
	return "";
    }

    function SetCookie(cName, value, expireDays) {
	var exDate = new Date();
	exDate.setDate(exDate.getDate()+expireDays);
	document.cookie = cName + "=" + escape(value) + ((expireDays ==null) ? "" : ";expires=" + exDate.toGMTString()) + ";path=/";
    }

    function DocLoaded() {
	document.divs = document.getElementsByTagName('div');
	var prefDesktop = GetCookie('desktopRef');
	var prefiOS = GetCookie('iosRef');
	var prefAndroid = GetCookie('androidRef');
	var firstTime = GetCookie('FT');
	if (firstTime == null || firstTime == "" ) {
	    SetCookie('FT', 'no', 30);
	    SetCookie('desktopRef', 'set', 30)
	} else if (prefDesktop == null || prefDesktop =="") {
	    if(getElementByClass('desktopRefIMG')) {
	        ShowHideDiv('desktopRef','specific-desktop','');
	    } else {
	        ShowHideDiv('desktopRef','specific-desktop','Desktop');
	    }
	}
	if (prefiOS == null || prefiOS =="") {
	    if(getElementByClass('iosRefIMG')) {
	        ShowHideDiv('iosRef','specific-ios','');
	    } else {
	        ShowHideDiv('iosRef','specific-ios','iOS');
	    }
	}
	if (prefAndroid == null || prefAndroid =="") {
	    if(getElementByClass('androidRefIMG')) {
	        ShowHideDiv('androidRef','specific-android','');
	    } else {
	        ShowHideDiv('androidRef','specific-android','Android');
	    }
	}	
    }
    </script>
    
		<!-- #TemplateEndEditable -->	

		<div class="nav">
		<div class="nav-prev">
			<a href='../Manual/Cameras.html'>
				<div class="nav-left"></div>
				<div class="nav-main">Previous</div>
				<div class="nav-right"></div>
			</a>
		</div>
	
		<div class="nav-next">
			<a href='../Manual/Terrains.html'>
				<div class="nav-left"></div>
				<div class="nav-main">Next</div>
				<div class="nav-right"></div>
			</a>
		</div>
	</div>
	</div>
</div>
</body></html>
<!-- #EndTemplate -->
