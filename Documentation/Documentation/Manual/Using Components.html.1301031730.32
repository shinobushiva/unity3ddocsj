<!-- #BeginTemplate "/Templates/manual-page.dwt" --><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta charset="utf-8">
	<!-- #TemplateBeginEditable name="doctitle" -->
		<title>Unity - Using Components</title>
	<!-- #TemplateEndEditable -->
</head>
<link rel="StyleSheet"  href="../Images/docs.css" type="text/css" />
<body onLoad="DocLoaded();">
<table class="titlebar" cellpadding=0 cellspacing=0 border=0><tr>
	<td class="titleleft"><img src="../images/top/left.png"></td>
	<td><a href="../../Documentation.html"><img src="../images/top/logo.png"></a></td>
	<td class="titlemid">
		<table><tr>
			<td class="doctitle">Using Components</td>
			<td><table align="right"><tr>
			<!-- #TemplateBeginEditable name="sections-nav" -->
			<td class="Manual"><a href="../Manual/index.html" title="Go to Unity manual" class="scripting-anchor"><img src="../images/spacer.gif" class="manual" border="0"><span class="manual-text">Manual</span></a><span class="docs-navigation">&nbsp;&nbsp;&nbsp;&nbsp;</span></td>
			<td class="Manual"><a href="../Components/index.html" title="Go to Reference" class="scripting-anchor"><img src="../images/spacer.gif" class="reference" border="0"><span class="components-text">Reference</span></a><span class="docs-navigation">&nbsp;&nbsp;&nbsp;&nbsp;</span></td>
			<td class="Manual"><a href="../ScriptReference/index.html" title="Go to Scripting Reference" class="scripting-anchor"><img src="../images/spacer.gif" class="scripting" border="0"><span class="scripting-text">Scripting &nbsp;&nbsp;</span></a></td>
			<!-- #TemplateEndEditable -->	
			</tr></table></td>
		</tr><tr>
			<td colspan="4">
				<table width="100%" class="docpath"><tr><td >
		<!-- #TemplateBeginEditable name="path" -->
					<a href="../Manual/index.html">Unity Manual</a> &gt; <a href="../Manual/User Guide.html">User Guide</a> &gt; <a href="../Manual/Building Scenes.html">Building Scenes</a> &gt; <a href="../Manual/GameObjects.html">GameObjects</a> &gt; <a href="../Manual/Using Components.html">Using Components</a>
		<!-- #TemplateEndEditable -->	
				</td>
				</td><td class="switchlink">
					<!-- #TemplateBeginEditable name="switchLink" -->
					<!--BeginSwitchLink--><!--EndSwitchLink-->
					<!-- #TemplateEndEditable -->	
				</td></tr></table>
			</td>
		</tr></table>
	</td>
	<td class="titleright" width="9"><img src="../images/top/right.png"></td>
</tr></table>
<div class="manual">
	<div class="main">

<!-- #TemplateBeginEditable name="unofficial translation" -->
<p><center><table border="1" ><tr><td  bgcolor="yellow"><center>このドキュメントは有志により翻訳されたもので、オフィシャルではありません。オリジナルのページは<a href="http://unity3d.com/support/documentation/" target="_blank">こちら</a>。<br>This document is unofficially translated by users.Please see the original document <a href="http://unity3d.com/support/documentation/" target="_blank">here</a>.<br><br>翻訳に関する修正など、ご連絡は<a href="mailto:stagesp1@gmail.com">こちら</a>まで。<br>Please send e-mail to <a href="mailto:stagesp1@gmail.com">here</a>, when you have any question about the translation.</center></td>
<td><a href="toedit_proxy.php?url=Using Components.html"><img src="../Images/pencil.png"/></a><br/>編集</td>
</tr></table></center></p>
<!-- #TemplateEndEditable -->
		<!-- #TemplateBeginEditable name="navigation" -->
		<div class="nav">
		<div class="nav-prev">
			<a href='../Manual/The GameObject-Component Relationship.html'>
				<div class="nav-left"></div>
				<div class="nav-main">Previous</div>
				<div class="nav-right"></div>
			</a>
		</div>
	
		<div class="nav-next">
			<a href='../Manual/The Component-Script Relationship.html'>
				<div class="nav-left"></div>
				<div class="nav-main">Next</div>
				<div class="nav-right"></div>
			</a>
		</div>
	</div>
		<!-- #TemplateEndEditable -->	
		<!-- #TemplateBeginEditable name="title" -->
			<h1>Using Components</h1>
		<!-- #TemplateEndEditable -->	
		<!-- #TemplateBeginEditable name="body" -->
			
<p><span class='doc-keyword'>Components</span> are the nuts &amp; bolts of objects and behaviors in a game.  They are the functional pieces of every <span class='doc-keyword'>GameObject</span>.  If you don't yet understand the relationship between Components and GameObjects, we recommend that you read the <a href="../Manual/GameObjects.html">GameObjects</a> page before going any further.
</p>
<p class='vspace'>A GameObject is a container for many different Components.  By default, all GameObjects automatically have a <span class='doc-prop'>Transform</span> Component.  This is because the Transform dictates where the GameObject is located, and how it is rotated and scaled.  Without a Transform Component, the GameObject wouldn't have a location in the world.  Try creating an empty GameObject now as an example.  Click the <span class='doc-menu'>GameObject-&gt;Create Empty</span> menu item.  Select the new GameObject, and look at the <span class='doc-keyword'>Inspector</span>.
</p>
<div class='vspace'></div><div><img class='figure' src='../Images/manual/Using Components-0.jpg' /></div>
<p><em>Even empty GameObjects have a Transform Component</em>
</p>
<p class='vspace'>Remember that you can always use the Inspector to see which Components are attached to the selected GameObject.  As Components are added and removed, the Inspector will always show you which ones are currently attached.  You will use the Inspector to change all the properties of any Component (including scripts)
</p>
<div class='vspace'></div><h2>Adding Components</h2>
<p>You can add Components to the selected GameObject through the Components menu.  We'll try this now by adding a <span class='doc-keyword'>Rigidbody</span> to the empty GameObject we just created.  Select it and choose <span class='doc-menu'>Component-&gt;Physics-&gt;Rigidbody</span> from the menu.  When you do, you will see the Rigidbody's properties appear in the Inspector.  If you press <span class='doc-keyword'>Play</span> while the empty GameObject is still selected, you might get a little surprise.  Try it and notice how the Rigidbody has added functionality to the otherwise empty GameObject. (The y-component of the GameObject starts to decrease.  This is because the physics engine in Unity is causing the GameObject to fall under gravity.)
</p>
<div class='vspace'></div><div><img class='figure' src='../Images/manual/Using Components-1.jpg' /></div>
<p><em>An empty GameObject with a Rigidbody Component attached</em>
</p>
<p class='vspace'>You can attach any number or combination of Components to a single GameObject.  Some Components work best in combination with others.  For example, the Rigidbody works with any Collider.  The Rigidbody controls the Transform through the <span class='doc-keyword'>NVIDIA PhysX</span> physics engine, and the Collider allows the Rigidbody to collide and interact with other Colliders.  A different example of Component combinations is a <span class='doc-keyword'>Particle System</span>.  They use a <span class='doc-keyword'>Particle Emitter</span>, <span class='doc-keyword'>Particle Animator</span>, and <span class='doc-keyword'>Particle Renderer</span> to create a group of moving particles.
</p>
<p class='vspace'>If you want to know more about using a particular Component, you can read about any of them in the <a href="../Components/Components.html">Component Reference</a>.  You can also access the reference page for a Component from Unity by clicking on the small <b>?</b> on the Component's header in the Inspector.
</p>
<div class='vspace'></div><h2>Editing Components</h2>
<p>One of the great aspects of Components is flexibility.  When you attach a Component to a GameObject, there are different values or 
<span class='doc-keyword'>Properties</span> in the Component that can be adjusted in the editor while building a game, or by scripts when running the game.  There are two main types of Properties: <span class='doc-keyword'>Values</span> and <span class='doc-keyword'>References</span>.
</p>
<p class='vspace'>Look at the image below.  It is an empty GameObject with an <span class='doc-prop'>Audio Source</span> Component.  All the values of the <span class='doc-prop'>Audio Source</span> in the Inspector are the default values.
</p>
<div class='vspace'></div><div><img class='figure' src='../Images/manual/Using Components-2.jpg' /></div>
<p class='vspace'>This Component contains a single Reference property, and seven Value properties.  <span class='doc-prop'>Audio Clip</span> is the Reference property.  When this Audio Source begins playing, it will attempt to play the audio file that is referenced in the <span class='doc-prop'>Audio Clip</span> property.  If no reference is made, an error will occur because there is no audio to be played.  You must reference the file within the Inspector.  This is as easy as dragging an audio file from the Project View onto the Reference Property or using the Object Selector.
</p>
<div class='vspace'></div><div><img class='figure' src='../Images/manual/Using Components-3.jpg' /></div>
<p><em>Now a sound effect file is referenced in the <span class='doc-prop'>Audio Clip</span> property</em>
</p>
<p class='vspace'>Components can include references to any other type of Component, GameObjects, or Assets. You can read more about assigning references on the <a href="../Manual/Editing Reference Properties.html">Assigning References</a> page.
</p>
<p class='vspace'>The remaining properties on the Audio Clip are all Value properties.  These can be adjusted directly in the Inspector. The Value properties on the Audio Clip are all toggles, numeric values, drop-down fields, but value properties can also be text strings, colors, curves, and other types. You can read more about these and about editing value properties on the <a href="../Manual/Editing Value Properties.html">Editing Value Properties</a> page.
</p>
<div class='vspace'></div><h3>Testing out Properties</h3>
<p>While your game is in <span class='doc-keyword'>Play Mode</span>, you are free to change properties in any GameObject's Inspector.  For example, you might want to experiment with different heights of jumping.  If you create a <span class='doc-prop'>Jump Height</span> property in a script, you can enter Play Mode, change the value, and press the jump button to see what happens.  Then without exiting Play Mode you can change it again and see the results within seconds.  When you exit Play Mode, your properties will revert to their pre-Play Mode values, so you don't lose any work.  This workflow gives you incredible power to experiment, adjust, and refine your gameplay without investing a lot of time in iteration cycles.  Try it out with any property in Play Mode.  We think you'll be impressed.
</p>
<div class='vspace'></div><h2>Removing Components</h2>
<p>If you want to remove a Component, option- or right-click on its header in the Inspector, and choose <span class='doc-menu'>Remove Component</span>.  Or you can left-click the options icon next to the <b>?</b> on the Component header.  All the property values will be lost and this cannot be undone, so be completely sure you want to remove the Component before you do.
</p>
</p><small>Page last updated: 2010-09-14</p>
    <script type="text/javascript">


    var allHTMLTags = new Array();
    document.divs = new Array();

    function getElementByClass(theClass) {

	    var allHTMLTags=document.getElementsByTagName("*");

	    for (var i=0; i<allHTMLTags.length; i++) {

		    if (allHTMLTags[i].className==theClass) {
			    return true;
		    }
	    }
	    return false;
    }

    function ShowHideDiv(containerName, className, content){
	var container = document.getElementById(containerName);
	if(container == null)
		return;
	if(content == '') {//In case there are no divs in the page we still can change the icons.
		if(containerName == 'desktopRef') {
			if(container.innerHTML == "<img src=\"../Images/DesktopNO.png\" alt=\"\">") {
				container.innerHTML = "<img src=\"../Images/DesktopYES.png\" alt=\"\">";
				SetCookie(containerName, 'set', 30);
			} else {
				container.innerHTML = "<img src=\"../Images/DesktopNO.png\" alt=\"\">";
				UnSetCookie(containerName);
			}
		}
		if(containerName == 'iosRef') {
			if(container.innerHTML == "<img src=\"../Images/iPhoneNO.png\" alt=\"\">") {
				container.innerHTML = "<img src=\"../Images/iPhoneYES.png\" alt=\"\">";
				SetCookie(containerName, 'set', 30);
			} else {
				container.innerHTML = "<img src=\"../Images/iPhoneNO.png\" alt=\"\">";
				UnSetCookie(containerName);
			}
		}
		if(containerName == 'androidRef') {
			if(container.innerHTML == "<img src=\"../Images/AndroidNO.png\" alt=\"\">") {
				container.innerHTML = "<img src=\"../Images/AndroidYES.png\" alt=\"\">";
				SetCookie(containerName, 'set', 30);
			} else {
				container.innerHTML = "<img src=\"../Images/AndroidNO.png\" alt=\"\">";
				UnSetCookie(containerName);
			}	
		}
	} else {
		if(container.innerHTML == "<h1><img src=\"../Images/PlatformArrowRight.png\" alt=\"\"> " + content + "</h1>") {
		container.innerHTML = "<h1><img src=\"../Images/PlatformArrowDown.png\" alt=\"\">" + content + "</h1>";
			SetCookie(containerName, 'set', 30);
		} else {
			container.innerHTML = "<h1><img src=\"../Images/PlatformArrowRight.png\" alt=\"\">" + content + "</h1>";
			UnSetCookie(containerName);
		}
	}
	for(var i = 0; i < document.divs.length; i++) {
		var divClassName = document.divs[i];
		var matched = false;
		if(divClassName.className == className)
			   matched = true;
		if(matched) {
			
			if(divClassName != null) {
				if (divClassName.style.display == 'block') {
					divClassName.style.display = 'none';
					if(content == '') {
						if(className == 'specific-desktop')
							container.innerHTML = "<img src=\"../Images/DesktopNO.png\" alt=\"\" />";
						if(className == 'specific-ios')
							container.innerHTML = "<img src=\"../Images/iPhoneNO.png\" alt=\"\" />";
						if(className == 'specific-android')
							container.innerHTML = "<img src=\"../Images/AndroidNO.png\" alt=\"\" />";
					} else {
						container.innerHTML = "<h1><img src=\"../Images/PlatformArrowRight.png\" alt=\"\" /> " + content + "</h1>";
					}
					UnSetCookie(containerName);
				} else {
					divClassName.style.display = 'block';
					if(content == '') {
						if(className == 'specific-desktop')
							container.innerHTML = "<img src=\"../Images/DesktopYES.png\" alt=\"\" />";
						if(className == 'specific-ios')
							container.innerHTML = "<img src=\"../Images/iPhoneYES.png\" alt=\"\" />";
						if(className == 'specific-android')
							container.innerHTML = "<img src=\"../Images/AndroidYES.png\" alt=\"\" />";
					} else {
						container.innerHTML = "<h1><img src=\"../Images/PlatformArrowDown.png\" alt=\"\" /> " + content + "</h1>";
					}
					SetCookie(containerName, 'set', 30);
				}
			}
		}	
        }			   
    }
    function UnSetCookie(cn) {
    	SetCookie(cn,'',30);
    }

    function GetCookie(cName) {
	if (document.cookie.length > 0) {
            cStart = document.cookie.indexOf(cName + "=");
	    if(cStart != -1) {
	        cStart = cStart + cName.length + 1;
	        cEnd = document.cookie.indexOf(";", cStart);
	        if (cEnd == -1) {
	            cEnd = document.cookie.length;
	        }
	        return unescape(document.cookie.substring(cStart, cEnd));;
	    }
	}
	return "";
    }

    function SetCookie(cName, value, expireDays) {
	var exDate = new Date();
	exDate.setDate(exDate.getDate()+expireDays);
	document.cookie = cName + "=" + escape(value) + ((expireDays ==null) ? "" : ";expires=" + exDate.toGMTString()) + ";path=/";
    }

    function DocLoaded() {
	document.divs = document.getElementsByTagName('div');
	var prefDesktop = GetCookie('desktopRef');
	var prefiOS = GetCookie('iosRef');
	var prefAndroid = GetCookie('androidRef');
	var firstTime = GetCookie('FT');
	if (firstTime == null || firstTime == "" ) {
	    SetCookie('FT', 'no', 30);
	    SetCookie('desktopRef', 'set', 30)
	} else if (prefDesktop == null || prefDesktop =="") {
	    if(getElementByClass('desktopRefIMG')) {
	        ShowHideDiv('desktopRef','specific-desktop','');
	    } else {
	        ShowHideDiv('desktopRef','specific-desktop','Desktop');
	    }
	}
	if (prefiOS == null || prefiOS =="") {
	    if(getElementByClass('iosRefIMG')) {
	        ShowHideDiv('iosRef','specific-ios','');
	    } else {
	        ShowHideDiv('iosRef','specific-ios','iOS');
	    }
	}
	if (prefAndroid == null || prefAndroid =="") {
	    if(getElementByClass('androidRefIMG')) {
	        ShowHideDiv('androidRef','specific-android','');
	    } else {
	        ShowHideDiv('androidRef','specific-android','Android');
	    }
	}	
    }
    </script>
    
		<!-- #TemplateEndEditable -->	

		<div class="nav">
		<div class="nav-prev">
			<a href='../Manual/The GameObject-Component Relationship.html'>
				<div class="nav-left"></div>
				<div class="nav-main">Previous</div>
				<div class="nav-right"></div>
			</a>
		</div>
	
		<div class="nav-next">
			<a href='../Manual/The Component-Script Relationship.html'>
				<div class="nav-left"></div>
				<div class="nav-main">Next</div>
				<div class="nav-right"></div>
			</a>
		</div>
	</div>
	</div>
</div>
</body></html>
<!-- #EndTemplate -->
